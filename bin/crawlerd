#!/usr/bin/env node
var program = require('commander')
  , fs = require('fs')
  , winston = require('winston')
  , path = require('path')
  , loglevels = require('../lib/loglevels.js');


/**
 * Command-line interface
 */

program
  .version('0.0.1')
  .option('-j, --journallist <url>',
          'Path to JSON file listing Journals to crawl.' +
          ' (default ~/.crawlerd_journals.json)', '~/.crawlerd_journals.json')
  .option('-r, --ratelimit <int>',
          'maximum number of queries per second (default 3)', 3)
  .option('-l, --loglevel <level>',
          'amount of information to log ' +
          '(silent, verbose, info*, data, warn, error, or debug)',
          'info')
  .parse(process.argv);

// set up logging
var allowedlevels = Object.keys(loglevels.levels);
if (allowedlevels.indexOf(program.loglevel) == -1) {
  winston.error('Loglevel must be one of: ',
                'quiet, verbose, data, info, warn, error, debug');
  process.exit(1);
}

log = new (winston.Logger)({
  transports: [new winston.transports.Console({
    level: program.loglevel,
    levels: loglevels.levels,
    colorize: true
  })],
  level: program.loglevel,
  levels: loglevels.levels,
  colorize: true
});
winston.addColors(loglevels.colors);

// Verbalize `runner`
log.runner = 'cm-crawlerd';

// Use `-f` or `--file` to specify the source file
var file  = argv._[0] || argv.f || argv.file || 'TODO.md';

// Use `-t` or `--task` to specify the text to append
var task = argv._[1] || argv.t || argv.task;


if (!file) {
  log.error('Please provide a source file, either as a first argument or with `-s`');
}

if (!task) {
  log.error('No tasks will be appended to "' + file + '" since you didn\'t specify anything.');
}


/**
 * Application
 */
